@Test
public void testBeginProcess() {
    // Arrange
    NexusIndexMasterCleanUpController controller = new NexusIndexMasterCleanUpController();
    controller.setBatchSize(50);
    Map<String, String> masterTableColumn = new HashMap<>();
    masterTableColumn.put("table1", "column1");
    masterTableColumn.put("table2", "column2");
    controller.setMasterTableColumn(masterTableColumn);
    Map<String, Integer> masterTableCleanup = new HashMap<>();
    masterTableCleanup.put("table1", 10);
    masterTableCleanup.put("table2", 20);
    controller.setMasterTableCleanup(masterTableCleanup);
    Map<String, Integer> masterTableInactiveRecCleanup = new HashMap<>();
    masterTableInactiveRecCleanup.put("table3", 30);
    masterTableInactiveRecCleanup.put("table4", 40);
    controller.setMasterTableInactiveRecCleanup(masterTableInactiveRecCleanup);
    NexusMasterHelper mockHelper = mock(NexusMasterHelper.class);
    controller.setNxsMasterHelper(mockHelper);
    ExceptionHandler mockExceptionHandler = mock(ExceptionHandler.class);
    controller.setExceptionHandler(mockExceptionHandler);

    // Act
    controller.beginProcess();

    // Assert
    verify(mockHelper, times(1)).performTableCleanUp(50, "table1", "column1", 10);
    verify(mockHelper, times(1)).performTableCleanUp(50, "table2", "column2", 20);
    verify(mockHelper, times(1)).performTableInactiveRecCleanUp(50, "table3", "column3", 30);
    verify(mockHelper, times(1)).performTableInactiveRecCleanUp(50, "table4", "column4", 40);
    verify(mockExceptionHandler, times(0)).handleException(anyString(), any(), any());
}
