@Test
public void testPerformTableCleanUp() throws Exception {
    // Setup
    NexusMasterHelper nxsMasterHelper = mock(NexusMasterHelper.class);
    Map<String, Integer> masterTableCleanup = new HashMap<>();
    masterTableCleanup.put("table1", 30);
    Map<String, String> masterTableColumn = new HashMap<>();
    masterTableColumn.put("table1", "column1");
    Integer batchSize = 100;

    // Create object under test
    NexusIndexMasterCleanUpController controller = new NexusIndexMasterCleanUpController();
    controller.setMasterTableCleanup(masterTableCleanup);
    controller.setMasterTableColumn(masterTableColumn);
    controller.setBatchSize(batchSize);
    controller.setNxsMasterHelper(nxsMasterHelper);

    // Test
    when(controller.isValidCleanUpEntry(eq("table1"), eq(30), eq("column1"))).thenReturn(true);
    controller.beginProcess();

    // Verify
    verify(nxsMasterHelper, times(1)).performTableCleanUp(eq(batchSize), eq("table1"), eq("column1"), eq(30));
}

@Test
public void testPerformTableInactiveRecCleanUp() throws Exception {
    // Setup
    NexusMasterHelper nxsMasterHelper = mock(NexusMasterHelper.class);
    Map<String, Integer> masterTableInactiveRecCleanup = new HashMap<>();
    masterTableInactiveRecCleanup.put("table1", 30);
    Map<String, String> inActiveTableColumn = new HashMap<>();
    inActiveTableColumn.put("table1", "column1");
    Integer batchSize = 100;

    // Create object under test
    NexusIndexMasterCleanUpController controller = new NexusIndexMasterCleanUpController();
    controller.setMasterTableInactiveRecCleanup(masterTableInactiveRecCleanup);
    controller.setInActiveTableColumn(inActiveTableColumn);
    controller.setBatchSize(batchSize);
    controller.setNxsMasterHelper(nxsMasterHelper);

    // Test
    when(controller.isValidCleanUpEntry(eq("table1"), eq(30), eq("column1"))).thenReturn(true);
    controller.beginProcess();

    // Verify
    verify(nxsMasterHelper, times(1)).performTableInactiveRecCleanUp(eq(batchSize), eq("table1"), eq("column1"), eq(30));
}

@Test
public void testPerformTableTruncate() throws Exception {
    // Setup
    NexusMasterHelper nxsMasterHelper = mock(NexusMasterHelper.class);
    List<String> masterTableTruncateList = Arrays.asList("table1");

    // Create object under test
    NexusIndexMasterCleanUpController controller = new NexusIndexMasterCleanUpController();
    controller.setNxsMasterHelper(nxsMasterHelper);
    controller.setMasterTableTruncateList(masterTableTruncateList);

    // Test
    controller.beginProcess();

    // Verify
    verify(nxsMasterHelper, times(1)).performTruncateTable(eq("table1"));
}
